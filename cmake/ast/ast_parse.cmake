function(ast_parse stream definition_id )

  #message(PUSH)
  if(ARGN)
      set(args ${ARGN})
      list_pop_front(ast_language args)

      map_get(${ast_language} ast_parsers parsers)
      map_get(${ast_language} ast_definitions definitions)
      function_import_table(${ast_parsers} __ast_call_parser)
  else()
      if(NOT ast_language)
          message(FATAL_ERROR "missing ast_language")
      endif()
  endif()

 # map_get(${ast_language} parsers parsers)
  map_get("${ast_definitions}" definition "${definition_id}")
  map_tryget(${definition} create_node node)
  map_get(${definition} parser parser)  
  map_get(${ast_parsers} parser_command "${parser}")
  map_tryget(${definition} peek peek)

 # message("trying to parse ${definition_id} with ${parser} parser. peek: '${peek}'")
  if(peek)
    token_stream_push(${stream})
  endif()  
  #eval("${parser_command}(\"${definition}\" \"${stream}\" \"${create_node}\")")

  __ast_call_parser("${parser}" "${definition}" "${stream}" "${create_node}")
  ans(node)
  if(peek)
    token_stream_pop(${stream})
  endif()
 
#if(node)
#  message(FORMAT "parsed {node.types}")
#else()
#  message("failed to parse ${definition_id}")
#endif()
#  message(POP)
  return_ref(node)
endfunction()