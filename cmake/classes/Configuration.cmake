function(Configuration)
	map_create(configurations)
	this_set(configurations ${configurations})

	proto_declarefunction(AddConfigurationFile)
	function(${AddConfigurationFile} name config_file)
		set(config)
		map_navigate_set("configurations.${name}.file" "${config_file}")
		map_navigate_set("configurations.${name}.name" "${name}")
	endfunction()

	proto_declarefunction(GetScope)
	function(${GetScope} result)
		cmake_parse_arguments("" "" "SCOPE" "" ${ARGN})
		set(config)
		if(NOT _SCOPE)
			map_keys(${configurations} keys)
			list_at(key keys -1)
			map_tryget(${configurations} config "${key}")
		else()
			map_tryget(${configurations} config "${_SCOPE}")
		endif()
		set(${result} ${config} PARENT_SCOPE)
	endfunction()


	proto_declarefunction(Set)
	function(${Set} navigation_expression value)	
		cmake_parse_arguments("" "" "SCOPE" "" ${ARGN})
		obj_callmember(${this} GetScope config SCOPE "${_SCOPE}")
		if(NOT config)
			message(FATAL_ERROR "Configuration: could not find configuration scope")
		endif()

		map_get(${config} file "file")
		map_get(${config} name "name")
		if(EXISTS "${file}")
			file(READ "${file}" json)
			json_deserialize(_config_object ${json})
		endif()
		map_navigate_set("_config_object.${navigation_expression}" "${value}")
		
		map_navigate_set("configurations.${name}.config" ${_config_object})
		json_serialize(json "${_config_object}" INDENTED)
		file(WRITE "${file}" "${json}")
	endfunction()

	proto_declarefunction(Get)
	function(${Get} result navigation_expression)
		cmake_parse_arguments("" "" "SCOPE" "" ${ARGN})
		obj_callmember(${this} GetScope config SCOPE "${_SCOPE}")
		if(NOT config)
			message(FATAL_ERROR "Configuration: could not find configuration scope")
		endif()

		map_keys(${configurations} keys)
		list(REVERSE keys)
		map_values(${configurations} configs "${keys}" )
		if(NOT _SCOPE)
			list(GET keys 0 key)
			set(_SCOPE ${key})
		endif()
		set(found false)
		set(${result} "" PARENT_SCOPE)
		foreach(config ${configs})
			map_navigate(config_name "config.name")
			if(${found} OR ${config_name} STREQUAL "${_SCOPE}" )
				set(found true)
			endif()
			if(found)
				map_get(${config} file "file")
				
				if(NOT EXISTS "${file}")
					return_value()
				endif()
				file(READ "${file}" json)
				json_deserialize(_config_object ${json})
				map_navigate(value "_config_object.${navigation_expression}")
				if(value)
					set(${result} ${value} PARENT_SCOPE)
					break()
				endif()
			endif()
		endforeach()
	endfunction()
endfunction()